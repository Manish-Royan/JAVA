package p2p.network;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.function.Consumer;

public class PeerServer implements Runnable {
    private int port;
    private ServerSocket serverSocket;
    private boolean running = false;
    private Consumer<String> messageHandler;

    public PeerServer(int port, Consumer<String> messageHandler) throws IOException {
        this.port = port;
        this.messageHandler = messageHandler;
        this.serverSocket = new ServerSocket(port);
    }

    @Override
    public void run() {
        running = true;
        try {
            while (running) {
                Socket clientSocket = serverSocket.accept();
                new Thread(() -> handleClient(clientSocket)).start();
            }
        } catch (IOException e) {
            if (running) {
                e.printStackTrace();
            }
        }
    }

    private void handleClient(Socket clientSocket) {
        try (BufferedReader reader = new BufferedReader(new InputStreamReader(clientSocket.getInputStream()))) {
            String message;
            while ((message = reader.readLine()) != null) {
                messageHandler.accept(message);
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    public void stop() {
        running = false;
        try {
            if (serverSocket != null) {
                serverSocket.close();
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}